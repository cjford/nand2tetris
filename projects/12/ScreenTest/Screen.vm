function Screen.init 0
push constant 16384
pop static 2
push constant 0
not
pop static 1
push constant 0
return
function Screen.clearScreen 2
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
push constant 0
push constant 255
push constant 255
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.drawPixel 2
push static 2
push argument 1
push constant 32
call Math.multiply 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push constant 2
push argument 0
push constant 15
and
call Screen.pow 2
pop local 1
push static 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 0
call Memory.peek 1
push local 1
or
call Memory.poke 2
pop temp 0
goto IF_END0
label IF_FALSE0
push local 0
push local 0
call Memory.peek 1
push local 1
not
and
call Memory.poke 2
pop temp 0
label IF_END0
push constant 0
return
function Screen.drawLine 8
push argument 2
push argument 0
sub
pop local 2
push argument 3
push argument 1
sub
pop local 3
push local 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push argument 3
call Screen.drawVerticalLine 3
pop temp 0
push constant 0
return
label IF_FALSE0
push local 3
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push argument 0
push argument 2
call Screen.drawHorizontalLine 3
pop temp 0
push constant 0
return
label IF_FALSE1
label WHILE_EXP0
push local 0
push local 2
call Screen.xCond 2
push local 1
push local 3
call Screen.yCond 2
and
not
if-goto WHILE_END0
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 0
push local 3
call Math.multiply 2
push local 1
push local 2
call Math.multiply 2
sub
pop local 4
push local 4
push local 3
push local 2
call Screen.incrementCond 3
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 2
call Screen.incrementOffset 2
pop local 0
goto IF_END2
label IF_FALSE2
push local 1
push local 3
call Screen.incrementOffset 2
pop local 1
label IF_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.incrementOffset 0
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push constant 1
sub
return
label IF_FALSE0
push argument 0
push constant 1
add
return
function Screen.xCond 0
push argument 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
lt
push argument 0
push argument 1
eq
or
return
label IF_FALSE0
push argument 0
push argument 1
gt
push argument 0
push argument 1
eq
or
return
function Screen.yCond 0
push argument 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
lt
push argument 0
push argument 1
eq
or
return
label IF_FALSE0
push argument 0
push argument 1
gt
push argument 0
push argument 1
eq
or
return
function Screen.incrementCond 0
push argument 1
push constant 0
lt
push argument 2
push constant 0
lt
and
push argument 1
push constant 0
gt
push argument 2
push constant 0
gt
and
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push constant 0
lt
return
label IF_FALSE0
push argument 0
push constant 0
gt
return
function Screen.drawVerticalLine 1
push argument 1
push argument 2
call Math.min 2
pop local 0
label WHILE_EXP0
push local 0
push argument 1
push argument 2
call Math.max 2
lt
not
if-goto WHILE_END0
push argument 0
push local 0
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawHorizontalLine 1
push argument 1
push argument 2
call Math.min 2
pop local 0
label WHILE_EXP0
push local 0
push argument 1
push argument 2
call Math.max 2
push constant 1
add
lt
not
if-goto WHILE_END0
push local 0
push argument 0
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawRectangle 1
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
not
if-goto WHILE_END0
push local 0
push argument 0
push argument 2
call Screen.drawHorizontalLine 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 2
push argument 2
neg
pop local 1
label WHILE_EXP0
push local 1
push argument 2
lt
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
pop local 0
push argument 1
push local 1
add
push argument 0
push local 0
sub
push argument 0
push local 0
add
call Screen.drawHorizontalLine 3
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.pow 2
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
return
label IF_FALSE0
push constant 1
pop local 0
push argument 0
pop local 1
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push local 1
push argument 0
call Math.multiply 2
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
return
